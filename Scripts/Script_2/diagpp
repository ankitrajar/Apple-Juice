#!/usr/bin/expect -f
set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}
if {[llength $argv] <= 2} {
puts "\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\
\n               Usages: diag \[IP Option\] \[Diag\] \[User (Optional)\] \[Password (Optional)\]\n\
\
\n               IP Option:Enter 1 for 192.168.143.16\
\n                         Enter 2 for 192.168.143.17\
\n                         Enter 3 for 192.168.241.16\n\
\
\n               Diag : Value without using 70**\
\n               User : Default is being used as \"root\".You may specify your username to override default\
\n               Password : Default Password is choosen according to the ip of Term-server(can be overriden)\n\
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n";
if {[llength $argv] < 2} { exit;
}
}
   set ip_option [lindex $argv 0];
   set diag [lindex $argv 1];
   set user [lindex $argv 2];
   set user_pass [lindex $argv 3];
   set null_value ""
   set diag_base 7000
   set term_diag [expr $diag_base + $diag]
   set node_user "guest"
   set node_user_pass "iltwat"
   set node_su_user "root"
   set node_su_user_pass "swtn100tj"
   set default_term_server_user "root"
   set default_term_server_user_pass "tslinux"
   puts "Turning off all output untill killing the process."
   log_user 1

switch $ip_option {
    {1} {
            set ip "192.168.143.16"
    }
    {2} {
            set ip "192.168.143.17"
    }
    {3} { 
    	    set ip "192.168.241.16"
	    set default_term_server_user_pass "iltwat"
    }       
    default {
               puts "Invalid Term Server IP Option $ip_option\n\n Enter 1 for 192.168.143.16\n Enter 2 for 192.168.143.17\n Enter 3 for 192.168.241.16\n"
	       exit; 
    }
}

if { $user == $null_value } {
   set user "$default_term_server_user"
}
if { $user_pass == $null_value } {
   set user_pass "$default_term_server_user_pass"
}

spawn telnet $ip
set node_spawn_id $spawn_id
expect "*login*"
send "$user\r"
expect "*assword*"
sleep 1; #Dont go so fast
send "$user_pass\r"
expect  "*# "
send "pattern_pids=`ps -ef | grep -ih \[t\]tyS$diag | awk '{print \$2}'`\r\
echo Checking and killing ttyS$diag if already running\r\
if \[ \"\$pattern_pids\" != \"\" \]; then\r\
signal=\"-9\"\r\
  pattern_pids=`ps -ef | grep -ih \[t\]tyS$diag | awk '{print \$2}'`\r\
  kill \$signal \$pattern_pids 2> /dev/null\r\
  echo Killed pid \$pattern_pids with signal \$signal\r\
fi\r\
echo ttyS$diag is not running now!!!\r"
#expect "*# "
#send "echo Current Processes:\r ps -ef\r"
expect "*# "
send "exit\r"
expect eof
close $node_spawn_id

log_user 1
#now trying to connect via diag
	spawn telnet $ip $term_diag
	set node_spawn_id_2 $spawn_id
	expect "*Escape character is*"
	send "$node_user\r"
	expect  {
		"*asswor*" {
				send "$node_user_pass\r"
				exp_continue
			   }
     "*command not found*" {
				send "\r"
				exp_continue
			   }

                      "*>" {
                                send "su\r"
				expect "*asswor*"
				send "$node_su_user_pass\r"
				exp_continue
                           }
 
                      "*#" {
				interact
                           }
                 "*again*" {
                                send "$node_user\r"
				expect "*asswor*"
				send "$node_user_pass\r"
                                exp_continue
                           }

		   default {
				interact
			   }
		}
