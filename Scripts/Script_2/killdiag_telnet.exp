#!/usr/bin/expect -f
set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}
proc killdaig { ip user user_pass diag } {
                        spawn telnet $ip
                        set node_spawn_id_1 $spawn_id
                        expect "*login*"
                        send "$user\r"
                        expect "*assword*"
                        send "$user_pass\r"
                        expect "*#"
send "pattern_pids=`ps -ef | grep -ih \[t\]tyS$diag | awk '{print \$2}'`\r\
echo Checking and killing ttyS$diag if already running\r\
if \[ \"\$pattern_pids\" != \"\" \]; then\r\
for signal in \"-15\" \"-1\" \"-9\"\r\
do\r\
  pattern_pids=`ps -ef | grep -ih \[t\]tyS$diag | awk '{print \$2}'`\r\
  kill \$signal \$pattern_pids 2> /dev/null\r\
  echo Killed pid \$pattern_pids with signal \$signal\r\
done\r\
fi\r\
echo ttyS$diag is not running now!!!;\recho Current Processes:\r ps -ef\r"
return
                  }

   set ip [lindex $argv 0];
   set diag [lindex $argv 1];
   set user [lindex $argv 2];
   set user_pass [lindex $argv 3];
   set null_value ""
   set diag_base 7000
   set term_diag [expr $diag_base + $diag]
   set node_user "guest"
   set node_user_pass "iltwat"
   set node_su_user "root"
   set node_su_user_pass "swtn100tj"

if {[llength $argv] <= 2} {
spawn $env(SHELL)
expect "*$ "
send "stty -echo\r";
expect "*$ "
send "echo \"\n++++++++++++++++++++++++++++++++++++++++++++++++++\n               Usages:\n killdiag.exp ip diag user user_pass\n Default user=root, user_pass=tslinux\
\n++++++++++++++++++++++++++++++++++++++++++++++++++\n\"\r";
expect "*$ "
send "logout\r";
if {[llength $argv] < 2} { exit;
}
}

if { $user == $null_value } {
   set user "root"
}
if { $user_pass == $null_value } {
   set user_pass "tslinux"
}

#killdaig $ip $user $user_pass $diag
#                        spawn telnet $ip
#                        set node_spawn_id_1 $spawn_id
#                        expect "*login*"
#                        send "$user\r"
#                        expect "*assword*"
#                        send "$user_pass\r"
#                        expect "*#"
spawn ssh $user@$ip
set node_spawn_id $spawn_id
expect {
    "*yes/no*" {
        send "yes\r"
        exp_continue
    }

    "*asswor*:" {
        send "$user_pass\r"
    }
}

expect  "*# "

send "pattern_pids=`ps -ef | grep -ih \[t\]tyS$diag | awk '{print \$2}'`\r\
echo Checking and killing ttyS$diag if already running\r\
if \[ \"\$pattern_pids\" != \"\" \]; then\r\
for signal in \"-15\" \"-1\" \"-9\"\r\
do\r\
  pattern_pids=`ps -ef | grep -ih \[t\]tyS$diag | awk '{print \$2}'`\r\
  kill \$signal \$pattern_pids 2> /dev/null\r\
  echo Killed pid \$pattern_pids with signal \$signal\r\
done\r\
fi\r\
echo ttyS$diag is not running now!!!;\r echo Current Processes:\r ps -ef\r"
expect "*#"
send "exit\r"
close $node_spawn_id
	spawn telnet $ip $term_diag
	set node_spawn_id $spawn_id
			expect "*login*"
			send "$node_user\r"
			expect "*assword*"
			send "$node_user_pass\r"
			expect "*>"
			send "su\r"
			expect "*assword*"
			send "$node_su_user_pass"
			interact
		  





